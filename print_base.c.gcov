        -:    0:Source:src/print_base.c
        -:    1:/* ************************************************************************** */
        -:    2:/*                                                                            */
        -:    3:/*                                                        :::      ::::::::   */
        -:    4:/*   print_base.c                                       :+:      :+:    :+:   */
        -:    5:/*                                                    +:+ +:+         +:+     */
        -:    6:/*   By: ai <ai@student.42>                          +#+  +:+       +#+        */
        -:    7:/*                                                +#+#+#+#+#+   +#+           */
        -:    8:/*   Created: 2025/09/10 00:00:00 by ai                #+#    #+#             */
        -:    9:/*   Updated: 2025/09/10 00:00:00 by ai               ###   ########.fr       */
        -:   10:/*                                                                            */
        -:   11:/* ************************************************************************** */
        -:   12:
        -:   13:#include "ft_printf.h"
        -:   14:
function ft_is_valid_base called 7 returned 100% blocks executed 100%
        7:   15:static int	ft_is_valid_base(const char *base)
        -:   16:{
        -:   17:	size_t	i;
        -:   18:	size_t	j;
        -:   19:
        7:   20:	if (base == NULL)
branch  0 taken 14% (fallthrough)
branch  1 taken 86%
        1:   21:		return (0);
        6:   22:	if (ft_strlen(base) < 2)
call    0 returned 100%
branch  1 taken 17% (fallthrough)
branch  2 taken 83%
        1:   23:		return (0);
        5:   24:	i = 0;
       53:   25:	while (base[i] != '\0')
branch  0 taken 94%
branch  1 taken 6% (fallthrough)
        -:   26:	{
       50:   27:		if (base[i] == '+' || base[i] == '-')
branch  0 taken 98% (fallthrough)
branch  1 taken 2%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        1:   28:			return (0);
       49:   29:		j = i + 1;
      409:   30:		while (base[j] != '\0')
branch  0 taken 88%
branch  1 taken 12% (fallthrough)
        -:   31:		{
      361:   32:			if (base[j] == base[i])
branch  0 taken 1% (fallthrough)
branch  1 taken 100%
        1:   33:				return (0);
      360:   34:			j++;
        -:   35:		}
       48:   36:		i++;
        -:   37:	}
        3:   38:	return (1);
        -:   39:}
        -:   40:
function ft_put_unbr_base_rec called 20 returned 100% blocks executed 100%
       20:   41:static int	ft_put_unbr_base_rec(
        -:   42:	unsigned long long n,
        -:   43:	const char *base,
        -:   44:	unsigned int blen)
        -:   45:{
        -:   46:	int	count;
        -:   47:	char	c;
        -:   48:
       20:   49:	count = 0;
       20:   50:	if (n >= blen)
branch  0 taken 85% (fallthrough)
branch  1 taken 15%
       17:   51:		count += ft_put_unbr_base_rec(n / blen, base, blen);
call    0 returned 100%
       20:   52:	c = base[n % blen];
       20:   53:	write(1, &c, 1);
call    0 returned 100%
       20:   54:	return (count + 1);
        -:   55:}
        -:   56:
function ft_put_unbr_base called 7 returned 100% blocks executed 100%
        7:   57:int	ft_put_unbr_base(unsigned long long n, const char *base)
        -:   58:{
        -:   59:	unsigned int	blen;
        -:   60:
        7:   61:	if (!ft_is_valid_base(base))
call    0 returned 100%
branch  1 taken 57% (fallthrough)
branch  2 taken 43%
        4:   62:		return (0);
        3:   63:	blen = (unsigned int)ft_strlen(base);
call    0 returned 100%
        3:   64:	return (ft_put_unbr_base_rec(n, base, blen));
call    0 returned 100%
        -:   65:}
        -:   66:
